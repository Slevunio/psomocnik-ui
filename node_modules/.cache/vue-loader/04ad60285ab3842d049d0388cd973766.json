{"remainingRequest":"/home/slevunio/psomocnik-ui/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/slevunio/psomocnik-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/slevunio/psomocnik-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/slevunio/psomocnik-ui/src/components/customTags/InputText.vue?vue&type=template&id=fdfdf33c&scoped=true&","dependencies":[{"path":"/home/slevunio/psomocnik-ui/src/components/customTags/InputText.vue","mtime":1562606499298},{"path":"/home/slevunio/psomocnik-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/slevunio/psomocnik-ui/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/slevunio/psomocnik-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/slevunio/psomocnik-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"form-group\" }, [\n    _c(\"label\", { attrs: { for: \"name\" } }, [\n      _c(\"h5\", [_vm._v(_vm._s(_vm.label))])\n    ]),\n    _vm.type === \"checkbox\"\n      ? _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.inputValue,\n              expression: \"inputValue\"\n            }\n          ],\n          staticClass: \"form-control\",\n          attrs: {\n            id: _vm.name,\n            name: _vm.name,\n            placeholder: _vm.placeholder,\n            type: \"checkbox\"\n          },\n          domProps: {\n            value: _vm.value,\n            checked: Array.isArray(_vm.inputValue)\n              ? _vm._i(_vm.inputValue, _vm.value) > -1\n              : _vm.inputValue\n          },\n          on: {\n            change: function($event) {\n              var $$a = _vm.inputValue,\n                $$el = $event.target,\n                $$c = $$el.checked ? true : false\n              if (Array.isArray($$a)) {\n                var $$v = _vm.value,\n                  $$i = _vm._i($$a, $$v)\n                if ($$el.checked) {\n                  $$i < 0 && (_vm.inputValue = $$a.concat([$$v]))\n                } else {\n                  $$i > -1 &&\n                    (_vm.inputValue = $$a\n                      .slice(0, $$i)\n                      .concat($$a.slice($$i + 1)))\n                }\n              } else {\n                _vm.inputValue = $$c\n              }\n            }\n          }\n        })\n      : _vm.type === \"radio\"\n      ? _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.inputValue,\n              expression: \"inputValue\"\n            }\n          ],\n          staticClass: \"form-control\",\n          attrs: {\n            id: _vm.name,\n            name: _vm.name,\n            placeholder: _vm.placeholder,\n            type: \"radio\"\n          },\n          domProps: {\n            value: _vm.value,\n            checked: _vm._q(_vm.inputValue, _vm.value)\n          },\n          on: {\n            change: function($event) {\n              _vm.inputValue = _vm.value\n            }\n          }\n        })\n      : _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.inputValue,\n              expression: \"inputValue\"\n            }\n          ],\n          staticClass: \"form-control\",\n          attrs: {\n            id: _vm.name,\n            name: _vm.name,\n            placeholder: _vm.placeholder,\n            type: _vm.type\n          },\n          domProps: { value: _vm.value, value: _vm.inputValue },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.inputValue = $event.target.value\n            }\n          }\n        })\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}